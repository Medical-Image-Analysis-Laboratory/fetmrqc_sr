from fetal_brain_qc.qc_evaluation import preprocess as pp
from sklearn.preprocessing import (
    StandardScaler,
    RobustScaler,
    QuantileTransformer,
)
from sklearn.decomposition import PCA, SparsePCA

VALID_EXP = ["regression", "classification"]
METRICS_BASE = [
    "centroid",
    "centroid_full",
    "dl_slice_iqa_pos_only_full",
    "dl_stack_iqa_full",
    "mask_volume",
    "rank_error_center",
    "rank_error_full",
]

METRICS_BASE += [m + "_nan" for m in METRICS_BASE]
# METRICS_BASE_CENTER = [
#     "centroid",
#     "centroid_full",
#     "dl_slice_iqa",
#     "dl_slice_iqa_pos_only_full",
#     "dl_stack_iqa_full",
#     "rank_error",
#     "rank_error_center",
#     "rank_error_full",
#     "mask_volume",
# ]


# METRICS_BASE_CENTER += [m + "_nan" for m in METRICS_BASE_CENTER]
METRICS = [
    "centroid",
    "centroid_full",
    "bias",
    "bias_full",
    "bias_full_not_mask",
    "dilate_erode_mask",
    "dilate_erode_mask_full",
    "dl_slice_iqa",
    "dl_slice_iqa_cropped",
    "dl_slice_iqa_full",
    "dl_slice_iqa_full_cropped",
    "dl_slice_iqa_pos_only_full",
    "dl_stack_iqa_full",
    "filter_laplace",
    "filter_laplace_full",
    "filter_laplace_mask",
    "filter_laplace_mask_full",
    "filter_sobel",
    "filter_sobel_full",
    "filter_sobel_mask",
    "filter_sobel_mask_full",
    "joint_entropy",
    "joint_entropy_full",
    "joint_entropy_intersection",
    "joint_entropy_median",
    "joint_entropy_window",
    "kurtosis",
    "kurtosis_full",
    "mae",
    "mae_window",
    "mask_volume",
    "mean",
    "mean_full",
    "median",
    "median_full",
    "mi",
    "mi_full",
    "mi_intersection",
    "mi_median",
    "mi_window",
    "ncc",
    "ncc_full",
    "ncc_intersection",
    "ncc_median",
    "ncc_window",
    "nmae",
    "nmae_window",
    "nmi",
    "nmi_full",
    "nmi_intersection",
    "nmi_median",
    "nmi_window",
    "nrmse",
    "nrmse_window",
    "percentile_5",
    "percentile_5_full",
    "percentile_95",
    "percentile_95_full",
    "psnr",
    "psnr_window",
    "rank_error",
    "rank_error_center",
    "rank_error_center_relative",
    "rank_error_full",
    "rank_error_full_cropped_relative",
    "rmse",
    "rmse_window",
    "shannon_entropy",
    "shannon_entropy_full",
    "ssim",
    "ssim_window",
    "std",
    "std_full",
    "variation",
    "variation_full",
    "im_size_x",
    "im_size_y",
    "im_size_z",
    "im_size_vx_size",
    "im_size_ip_size",
]

METRICS += [m + "_nan" for m in METRICS]

METRICS_SEG = [
    "seg_sstats_BG_mean",
    "seg_sstats_BG_median",
    "seg_sstats_BG_p95",
    "seg_sstats_BG_p05",
    "seg_sstats_BG_k",
    "seg_sstats_BG_stdv",
    "seg_sstats_BG_mad",
    "seg_sstats_BG_n",
    "seg_sstats_CSF_mean",
    "seg_sstats_CSF_median",
    "seg_sstats_CSF_p95",
    "seg_sstats_CSF_p05",
    "seg_sstats_CSF_k",
    "seg_sstats_CSF_stdv",
    "seg_sstats_CSF_mad",
    "seg_sstats_CSF_n",
    "seg_sstats_GM_mean",
    "seg_sstats_GM_median",
    "seg_sstats_GM_p95",
    "seg_sstats_GM_p05",
    "seg_sstats_GM_k",
    "seg_sstats_GM_stdv",
    "seg_sstats_GM_mad",
    "seg_sstats_GM_n",
    "seg_sstats_WM_mean",
    "seg_sstats_WM_median",
    "seg_sstats_WM_p95",
    "seg_sstats_WM_p05",
    "seg_sstats_WM_k",
    "seg_sstats_WM_stdv",
    "seg_sstats_WM_mad",
    "seg_sstats_WM_n",
    "seg_sstats_full_BG_mean",
    "seg_sstats_full_BG_median",
    "seg_sstats_full_BG_p95",
    "seg_sstats_full_BG_p05",
    "seg_sstats_full_BG_k",
    "seg_sstats_full_BG_stdv",
    "seg_sstats_full_BG_mad",
    "seg_sstats_full_BG_n",
    "seg_sstats_full_CSF_mean",
    "seg_sstats_full_CSF_median",
    "seg_sstats_full_CSF_p95",
    "seg_sstats_full_CSF_p05",
    "seg_sstats_full_CSF_k",
    "seg_sstats_full_CSF_stdv",
    "seg_sstats_full_CSF_mad",
    "seg_sstats_full_CSF_n",
    "seg_sstats_full_GM_mean",
    "seg_sstats_full_GM_median",
    "seg_sstats_full_GM_p95",
    "seg_sstats_full_GM_p05",
    "seg_sstats_full_GM_k",
    "seg_sstats_full_GM_stdv",
    "seg_sstats_full_GM_mad",
    "seg_sstats_full_GM_n",
    "seg_sstats_full_WM_mean",
    "seg_sstats_full_WM_median",
    "seg_sstats_full_WM_p95",
    "seg_sstats_full_WM_p05",
    "seg_sstats_full_WM_k",
    "seg_sstats_full_WM_stdv",
    "seg_sstats_full_WM_mad",
    "seg_sstats_full_WM_n",
    "seg_volume_CSF",
    "seg_volume_GM",
    "seg_volume_WM",
    "seg_volume_full_CSF",
    "seg_volume_full_GM",
    "seg_volume_full_WM",
    "seg_snr_BG",
    "seg_snr_CSF",
    "seg_snr_GM",
    "seg_snr_WM",
    "seg_snr_total",
    "seg_snr_full_BG",
    "seg_snr_full_CSF",
    "seg_snr_full_GM",
    "seg_snr_full_WM",
    "seg_snr_full_total",
    "seg_cnr",
    "seg_cnr_full",
    "seg_cjv",
    "seg_cjv_full",
    "seg_wm2max",
    "seg_wm2max_full",
]

METRICS_SEG += [m + "_nan" for m in METRICS_SEG]

SCALERS = [
    StandardScaler(),
    RobustScaler(),
    pp.PassThroughScaler(),
    pp.GroupRobustScaler(),
    pp.GroupStandardScaler(),
    QuantileTransformer(),
    pp.GroupQuantileTransformer(),
]
NOISE_FEATURES = ["passthrough", pp.NoiseWinnowFeatSelect()]
PCA_FEATURES = ["passthrough", PCA(), SparsePCA()]
